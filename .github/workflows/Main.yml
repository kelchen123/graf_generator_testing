name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  grafonnet_generator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run grafana json container generator
        run: |
          echo sudo docker run --rm --name run_grafonnet -v $GITHUB_WORKSPACE/grafana:/app --privileged quay.io/ebattat/run_grafonnet:latest

      - name: Check for changes in grafana json file
        id: check_changes
        run: |
          git diff --quiet $GITHUB_WORKSPACE/grafana/output.json || echo "::set-output name=changes::true"

      - name: Commit grafana json file
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo ${{ steps.check_changes.outputs.changes }}
          git checkout main
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.name  ${{ secrets.USER_NAME }}
          git add $GITHUB_WORKSPACE/grafana/output.json
          git commit -m "Update grafana json file"

          # Pull the latest changes from the remote main branch
          git pull origin main

          # Push the changes to the remote main branch
          git push
          
      - name: Update Grafana dashboard using API
        #if: steps.check_changes.outputs.changes == 'true'
        run: |
          jq -n --slurpfile dashboard $GITHUB_WORKSPACE/grafana/output.json '{ "dashboard": $dashboard[0], "message": "Made changes to xyz", "overwrite": true}' < $GITHUB_WORKSPACE/grafana/output.json | curl --limit-rate 1M --http1.1 -H "Authorization: Bearer ${{ secrets.GRAFANA_API }}" -X POST -H "Content-Type: application/json" --data-binary @- ${{ secrets.GRAFANA_IMPORT_URL }}
          
